package prism4291.henachoko;

import org.json.JSONObject;

import static org.lwjgl.opengl.GL11.*;

public class PrismGamePuyopuyo {
    static String status;
    Puyopuyo currentPuyo;
    PrismGamePuyopuyo(){
        status="ready";
        status="go";
    }
    static class Puyopuyo {
        int mainColor;
        int subColor;
        int muki;
        int puyoX;
        int puyoY;
        double puyoMoveX;
        double puyoMoveY;
        int cooldown;
        int frameX;
        int frameY;
        int frameMaxX;
        int frameMaxY;
        int deltaCount;
        int puyoMaxY=14;
        int puyoMaxX=6;

        Puyopuyo(int color1, int color2) {
            mainColor = color1;
            subColor = color2;
            muki = 0;
            puyoMoveX = 0;
            puyoMoveY = 1;
            frameMaxX=1;
            frameMaxY=40;
            frameY=20;
            frameX=0;
            puyoX = 2;
            puyoY = 2;
            cooldown = 0;
        }
        void move(){
            frameY+=1;
            if(frameY>=frameMaxY){
                status="check";
            }
        }
    }
    int PuyoLoop(){
        switch (status){
            case "go":
                status="summon";
                break;
            case "summon":
                currentPuyo=new Puyopuyo(0,0);
                status="move";
                break;
            case "move":
                currentPuyo.move();
                break;
            case "check":
                if(currentPuyo.puyoY<currentPuyo.puyoMaxY-1){
                    currentPuyo.puyoY+=1;
                    currentPuyo.puyoMoveY=1;
                    currentPuyo.frameY=0;
                    currentPuyo.frameMaxY=40;
                    status="move";
                    currentPuyo.move();
                }else{
                    status="fall";
                }

                break;
            case "fall":
                status="kesu";
                break;
            case "kesu":

                status="summon";
                break;
        }
        System.out.println(status);
        draw();
        return 0;
    }

    String getData(){
        return "";
    }
    void updateData(JSONObject obj){

    }
    void draw(){
        glBegin(GL_TRIANGLE_FAN);
        glColor4d(1, 1, 1, 1);
        glVertex2d(-1, -1);
        glVertex2d(-1, 1);
        glVertex2d(1, 1);
        glVertex2d(1, -1);
        glEnd();
//field
        glBegin(GL_QUADS);
        glColor4d(0.8,1,0.8,1);
        glVertex2d(calWinX(0,0),calWinY(2));
        glVertex2d(calWinX(0,0),calWinY(14));
        glVertex2d(calWinX(6,0),calWinY(14));
        glVertex2d(calWinX(6,0),calWinY(2));
        glEnd();
        //current puyo
        if(currentPuyo!=null) {
            glBegin(GL_QUADS);
            glColor4d(1, 0, 0, 1);
            glVertex2d(calWinX(currentPuyo.puyoX- currentPuyo.puyoMoveX+ currentPuyo.puyoMoveX* currentPuyo.frameX/ currentPuyo.frameMaxX, 0), calWinY(currentPuyo.puyoY- currentPuyo.puyoMoveY+ currentPuyo.puyoMoveY* currentPuyo.frameY/ currentPuyo.frameMaxY));
            glVertex2d(calWinX(currentPuyo.puyoX- currentPuyo.puyoMoveX+ currentPuyo.puyoMoveX* currentPuyo.frameX/ currentPuyo.frameMaxX , 0), calWinY(currentPuyo.puyoY- currentPuyo.puyoMoveY+ currentPuyo.puyoMoveY* currentPuyo.frameY/ currentPuyo.frameMaxY+1));
            glVertex2d(calWinX(currentPuyo.puyoX- currentPuyo.puyoMoveX+ currentPuyo.puyoMoveX* currentPuyo.frameX/ currentPuyo.frameMaxX+ 1, 0), calWinY(currentPuyo.puyoY- currentPuyo.puyoMoveY+ currentPuyo.puyoMoveY* currentPuyo.frameY/ currentPuyo.frameMaxY+1));
            glVertex2d(calWinX(currentPuyo.puyoX- currentPuyo.puyoMoveX+ currentPuyo.puyoMoveX* currentPuyo.frameX/ currentPuyo.frameMaxX+1, 0), calWinY(currentPuyo.puyoY- currentPuyo.puyoMoveY+ currentPuyo.puyoMoveY* currentPuyo.frameY/ currentPuyo.frameMaxY));
            glEnd();
            System.out.println(currentPuyo.puyoY);
        }
    }
    double calWinX(double x,int n){
        return -1+x*9.0/120+0.2;
    }
    double calWinY(double y){
        return 1-y*16.0/120+0.1;
    }
}
